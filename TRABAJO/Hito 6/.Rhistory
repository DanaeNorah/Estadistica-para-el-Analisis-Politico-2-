library(rio)
link='https://github.com/DanaeNorah/Estadistica-para-el-Analisis-Politico-2-/raw/master/TRABAJO/Base%20Final/basefinal.csv'
data = import(link)
summary(data)
row.names(data)=data$Pais
data=na.omit(data)
library(car)
data$MLAutonomia <-as.factor(data$MLAutonomia)
data$MLAutonomia=factor(data$MLAutonomia,
levels = levels(data$MLAutonomia),
labels = c("1","2","3","4","5"),
ordered = T)
data$MLAutonomia <-as.numeric(data$MLAutonomia)
table(data$MLAutonomia)
#Le asignamos etiquetas a los valores
data$MLViolencia <-as.factor(data$MLViolencia)
data$MLViolencia=factor(data$MLViolencia,
levels = levels(data$MLViolencia),
labels = c("1","2","3"),
ordered = T)
data$MLViolencia <-as.numeric(data$MLViolencia)
table(data$MLViolencia)
names(data)[7]='DesconfianzaSJ'
subdata= data[,c(3,4,5,6,7,8,10)]
subdata$SecundariaC= 100 - subdata$SecundariaC
subdata$CuentaF= 100 - subdata$CuentaF
subdata$VozPolitica= 100 - subdata$VozPolitica
str(subdata)
# esta es:
library(polycor)
corMatrix=polycor::hetcor(subdata)$correlations
#Sin evaluar significancia:
library(ggcorrplot)
ggcorrplot(corMatrix)
#Evaluando significancia:
ggcorrplot(corMatrix,
p.mat = cor_pmat(corMatrix),
insig = "blank")
#te sirve para redondear a dos decimales, pero si se corresolo "matriz_corr" es para sacar
round(corMatrix, 2)
library(psych)
psych::KMO(corMatrix)
cortest.bartlett(corMatrix,n=nrow(subdata))$p.value>0.05
library(matrixcalc)
is.singular.matrix(corMatrix)
fa.parallel(subdata,fm = 'ML', fa = 'fa')
library(GPArotation)
resfa <- fa(subdata,nfactors = 3,cor = 'mixed',rotate = "varimax",fm="minres")
print(resfa$loadings)
print(resfa$loadings,cutoff = 0.5)
fa.diagram(resfa)
#¿La Raíz del error cuadrático medio corregida está cerca a cero?
resfa$crms
#¿La Raíz del error cuadrático medio de aproximación es menor a 0.05?
resfa$RMSEA
#¿El índice de Tucker-Lewis es mayor a 0.9?
resfa$TLI
#¿Qué variables aportaron mas a los factores?
sort(resfa$communality)
#¿Qué variables contribuyen a mas de un factor?
sort(resfa$complexity)
factoriales=as.data.frame(resfa$scores)
head(factoriales)
subdata$factor1<- factoriales$MR1
subdata$factor2<- factoriales$MR2
subdata$factor3<- factoriales$MR3
summary(factoriales)
subdata=cbind(data[,c(1,2,9)],subdata)
library(BBmisc)
subdata$DesigualdadGenero=normalize(subdata$DesigualdadGenero,
method = "range",
margin=2, # by column
range = c(0, 100))
subdata$factor1=normalize(subdata$factor1,
method = "range",
margin=2, # by column
range = c(0, 100))
subdata$factor2=normalize(subdata$factor2,
method = "range",
margin=2, # by column
range = c(0, 100))
subdata$factor3=normalize(subdata$factor3,
method = "range",
margin=2, # by column
range = c(0, 100))
f1=formula(~DesigualdadGenero + factor1) #v. dependiente y v. independiente
# camino parametrico
pearson1=cor.test(f1,data=subdata)
pearson1
f2=formula(~DesigualdadGenero + factor2) #v. dependiente y v. independiente
# camino parametrico
pearson2=cor.test(f2,data=subdata)
pearson2
f3=formula(~DesigualdadGenero + factor3) #v. dependiente y v. independiente
# camino parametrico
pearson3=cor.test(f3,data=subdata)
pearson3
plot(subdata$factor1,subdata$DesigualdadGenero)
plot(subdata$factor2,subdata$DesigualdadGenero)
plot(subdata$factor3,subdata$DesigualdadGenero)
hipotesis1= formula(DesigualdadGenero ~ factor1)
regresion1=lm(hipotesis1,data=subdata)
summary(regresion1)
hipotesis2 = formula(DesigualdadGenero ~ factor3)
regresion2=lm(hipotesis2,data=subdata)
summary(regresion2)
hipotesis3 = formula(DesigualdadGenero ~ factor1 + factor3)
regresion3=lm(hipotesis3,data=subdata)
summary(regresion3)
hipotesis4 = formula(DesigualdadGenero ~ factor1 + factor2 + factor3)
regresion4=lm(hipotesis4,data=subdata[,-c(1)])
summary(regresion4)
library(stargazer)
stargazer(regresion3, regresion4, type = "text")
hipotesis5 = formula(DesigualdadGenero ~ factor1 + factor2 + factor3+ DesempleoMuj)
regresion5=lm(hipotesis5,data=subdata[,-c(1)])
summary(regresion5)
# linea roja debe tender a horizontal
plot(regresion4, 1)
# linea roja debe tender a horizontal
plot(regresion4, 3)
library(lmtest)
# null: modelo homocedastico
bptest(regresion4)
# puntos cerca a la diagonal
plot(regresion3, 4)
shapiro.test(regresion4$residuals)
library(DescTools)
VIF(regresion4) # > 5 es problematico
plot(regresion4,5)
checkregresion4=as.data.frame(influence.measures(regresion4)$is.inf)
head(checkregresion4)
checkregresion4[checkregresion4$cook.d|checkregresion4$hat,]
#no todo valor outlier es influyente pero si todo valor influyente es outlier
library(polycor)
correlaciones=polycor::hetcor(subdata[,-c(1,11,12,13)])$correlations
#Sin evaluar significancia:
library(ggcorrplot)
ggcorrplot(correlaciones)
correlaciones
mod1=lm(subdata$DesigualdadGenero ~ subdata$MLAutonomia)
summary(mod1)
mod2=lm(subdata$DesigualdadGenero ~ subdata$MLViolencia)
summary(mod2)
mod3=lm(subdata$DesigualdadGenero ~ subdata$VozPolitica)
summary(mod3)
mod4=lm(subdata$DesigualdadGenero ~ subdata$LibertadMov)
summary(mod4)
mod5=lm(subdata$DesigualdadGenero ~ subdata$Desconfianza)
summary(mod5)
mod6=lm(subdata$DesigualdadGenero ~ subdata$DesempleoMuj)
summary(mod6)
mod7=lm(subdata$DesigualdadGenero ~ subdata$SecundariaC)
summary(mod7)
mod8=lm(subdata$DesigualdadGenero ~ subdata$CuentaF)
summary(mod8)
MF0=lm(DesigualdadGenero ~ .,data=subdata[,-c(1)])
summary(MF0)
MF1=lm(subdata$DesigualdadGenero ~ subdata$MLAutonomia +subdata$LibertadMov + subdata$SecundariaC + subdata$CuentaF)
anova(MF1)
library(stargazer)
stargazer(MF1, type = "text")
# linea roja debe tender a horizontal
plot(MF1, 1)
# linea roja debe tender a horizontal
plot(MF1, 3)
library(lmtest)
# Hnull: modelo homocedastico
bptest(MF1)
# puntos cerca a la diagonal
plot(MF1, 2)
shapiro.test(MF1$residuals)
library(DescTools)
VIF(MF1) # > 5 es problematico
plot(MF1,5)
checkMF1=as.data.frame(influence.measures(MF1)$is.inf)
head(checkMF1)
checkMF1[checkMF1$cook.d|checkMF1$hat,]
MF2=lm(subdata$DesigualdadGenero ~ subdata$MLAutonomia +subdata$SecundariaC + subdata$CuentaF+ subdata$VozPolitica)
anova(MF1)
stargazer(MF2, type = "text")
# linea roja debe tender a horizontal
plot(MF2, 1)
# linea roja debe tender a horizontal
plot(MF2, 3)
library(lmtest)
# Hnull: modelo homocedastico
bptest(MF2)
# puntos cerca a la diagonal
plot(MF2, 2)
shapiro.test(MF2$residuals)
library(DescTools)
VIF(MF2) # > 5 es problematico
plot(MF2,5)
checkMF2=as.data.frame(influence.measures(MF2)$is.inf)
head(checkMF2)
checkMF2[checkMF2$cook.d|checkMF2$hat,]
MF3=lm(subdata$DesigualdadGenero ~ subdata$MLAutonomia +subdata$CuentaF + subdata$SecundariaC)
anova(MF3)
stargazer(MF3, type = "text")
# linea roja debe tender a horizontal
plot(MF3, 1)
# linea roja debe tender a horizontal
plot(MF3, 3)
library(lmtest)
# Hnull: modelo homocedastico
bptest(MF3)
# puntos cerca a la diagonal
plot(MF3, 2)
shapiro.test(MF3$residuals)
library(DescTools)
VIF(MF3) # > 5 es problematico
plot(MF3,5)
checkMF3=as.data.frame(influence.measures(MF3)$is.inf)
head(checkMF3)
checkMF3[checkMF3$cook.d|checkMF3$hat,]
stargazer(MF1,MF2,MF3, type = "text") #TRES putnso nos dan un alto valor de significancia, el primero es el estimado o cieficiente, el entre parentesis es el error residual.
View(subdata)
